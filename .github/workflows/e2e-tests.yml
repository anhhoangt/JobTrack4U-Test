name: E2E Tests

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]
  schedule:
    # Run tests daily at 2 AM UTC
    - cron: '0 2 * * *'
  workflow_dispatch:
    inputs:
      test_suite:
        description: 'Test suite to run'
        required: false
        default: 'all'
        type: choice
        options:
          - all
          - auth
          - jobs
          - activities
          - timeline
          - navigation
          - pom
      browser:
        description: 'Browser to test against'
        required: false
        default: 'all'
        type: choice
        options:
          - all
          - chromium
          - firefox
          - webkit

jobs:
  test:
    name: E2E Tests
    runs-on: ubuntu-latest
    timeout-minutes: 20

    strategy:
      fail-fast: false
      matrix:
        browser: [chromium, firefox, webkit]
        include:
          - browser: chromium
            project: chromium
          - browser: firefox
            project: firefox
          - browser: webkit
            project: webkit

    services:
      # Add your JobTrack application service here if needed
      # jobtrack-app:
      #   image: your-jobtrack-image:latest
      #   ports:
      #     - 3000:3000
      #   env:
      #     NODE_ENV: test

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Install Playwright browsers
      run: npx playwright install --with-deps

    - name: Wait for application to be ready
      run: |
        echo "Waiting for JobTrack application to be ready..."
        # Add health check for your application here
        # npx wait-on http://localhost:3000 --timeout=60000

    - name: Run E2E tests
      run: |
        if [ "${{ github.event.inputs.test_suite }}" == "auth" ]; then
          npm run test:auth
        elif [ "${{ github.event.inputs.test_suite }}" == "jobs" ]; then
          npm run test:jobs
        elif [ "${{ github.event.inputs.test_suite }}" == "activities" ]; then
          npm run test:activities
        elif [ "${{ github.event.inputs.test_suite }}" == "timeline" ]; then
          npm run test:timeline
        elif [ "${{ github.event.inputs.test_suite }}" == "navigation" ]; then
          npm run test:navigation
        elif [ "${{ github.event.inputs.test_suite }}" == "pom" ]; then
          npm run test:pom
        else
          npm test
        fi
      env:
        CI: true
        BROWSER: ${{ matrix.browser }}

    - name: Upload Playwright Report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: playwright-report-${{ matrix.browser }}
        path: playwright-report/
        retention-days: 30

    - name: Upload Test Results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results-${{ matrix.browser }}
        path: test-results/
        retention-days: 7

    - name: Upload Screenshots
      uses: actions/upload-artifact@v4
      if: failure()
      with:
        name: screenshots-${{ matrix.browser }}
        path: test-results/**/*.png
        retention-days: 7

    - name: Upload Videos
      uses: actions/upload-artifact@v4
      if: failure()
      with:
        name: videos-${{ matrix.browser }}
        path: test-results/**/*.webm
        retention-days: 7

  smoke-tests:
    name: Smoke Tests
    runs-on: ubuntu-latest
    timeout-minutes: 10
    if: github.event_name == 'pull_request'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Install Playwright browsers
      run: npx playwright install --with-deps chromium

    - name: Run smoke tests
      run: npm run test:smoke
      env:
        CI: true

    - name: Upload Smoke Test Report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: smoke-test-report
        path: playwright-report/
        retention-days: 7

  visual-regression:
    name: Visual Regression Tests
    runs-on: ubuntu-latest
    timeout-minutes: 15
    if: github.event_name == 'pull_request'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Install Playwright browsers
      run: npx playwright install --with-deps chromium

    - name: Run visual regression tests
      run: npx playwright test --grep="@visual"
      env:
        CI: true

    - name: Upload Visual Test Report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: visual-regression-report
        path: playwright-report/
        retention-days: 14

  mobile-tests:
    name: Mobile Tests
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Install Playwright browsers
      run: npx playwright install --with-deps chromium

    - name: Run mobile tests
      run: npm run test:mobile
      env:
        CI: true

    - name: Upload Mobile Test Report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: mobile-test-report
        path: playwright-report/
        retention-days: 7

  notification:
    name: Notify Results
    runs-on: ubuntu-latest
    needs: [test, smoke-tests, visual-regression, mobile-tests]
    if: always() && (github.event_name == 'push' || github.event_name == 'schedule')

    steps:
    - name: Notify on Slack (Success)
      if: needs.test.result == 'success'
      run: |
        echo "All E2E tests passed! ✅"
        # Add Slack notification here
        # curl -X POST -H 'Content-type: application/json' \
        #   --data '{"text":"JobTrack E2E Tests: All tests passed! ✅"}' \
        #   ${{ secrets.SLACK_WEBHOOK_URL }}

    - name: Notify on Slack (Failure)
      if: needs.test.result == 'failure'
      run: |
        echo "E2E tests failed! ❌"
        # Add Slack notification here
        # curl -X POST -H 'Content-type: application/json' \
        #   --data '{"text":"JobTrack E2E Tests: Tests failed! ❌ Check the GitHub Actions for details."}' \
        #   ${{ secrets.SLACK_WEBHOOK_URL }}

    - name: Create Issue on Test Failure
      if: needs.test.result == 'failure' && github.event_name == 'schedule'
      uses: actions/github-script@v7
      with:
        script: |
          github.rest.issues.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: 'Scheduled E2E Tests Failed',
            body: 'The scheduled E2E tests have failed. Please check the [workflow run](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}) for details.',
            labels: ['bug', 'e2e-tests', 'automated']
          })

  performance:
    name: Performance Tests
    runs-on: ubuntu-latest
    timeout-minutes: 15
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Install Playwright browsers
      run: npx playwright install --with-deps chromium

    - name: Run performance tests
      run: npx playwright test --grep="@performance"
      env:
        CI: true

    - name: Upload Performance Report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: performance-report
        path: playwright-report/
        retention-days: 30
